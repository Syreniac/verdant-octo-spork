# Please run the clean command detailed at the bottom, before running: make -f makefile_lab

CFLAGS = -pedantic -Wall -Wextra -std=c99 -Wno-unused-parameter -O3 -g
TTF_FLAGS = -Ilibraries_Lab/SDL_ttf/include -Llibraries_Lab/SDL_ttf/lib
TEST_FLAGS = -I/usr/include -L/usr/lib64 -Wl,-rpath,/usr/lib64
IMAGE_FLAGS = -Ilibraries_Lab/SDL_image/include -Llibraries_Lab/SDL_image/lib
MIXER_FLAGS = -Ilibraries_Lab/SDL_mixer/include -Llibraries_Lab/SDL_mixer/lib
LFLAGS = -g $(TTF_FLAGS) $(IMAGE_FLAGS) $(MIXER_FLAGS) -lSDL2 -lSDL2_Image -lSDL_ttf -lSDL_Mixer -lfreetype -lm
DELETE = rm
DELETE_RECURSIVE = rm -r

# List all the files here
#Add a /. after assets to copy only the contents inside, rather than the folder too.
ASSETS_CONTENTS = assets/*
COMMON_FILES = init.o game.o world_generation.o game_objects.o AI.o UI.o generic.o controls.o graphics.o audio.o announcements.o
SOURCE_FILES = main.o $(COMMON_FILES)
ALLTEST_FILES = all.test.o $(COMMON_FILES)
BIN = bin
PROG = $(BIN)/Prototype
ALLTEST = $(BIN)/Test
CXX = gcc


#==========
########### Makes both executables simultaneously, in the same bin.
#==========

# Dictates which executables need to be made.
all: $(PROG) $(ALLTEST)

# Compiles all object files needed to make each executable.
%.o: src/%.c src/%.h
	$(CXX) $(CFLAGS) $(LFLAGS) -c -s $<
all.test.o: src/all.test.c src/all.test.h
	$(CXX) $(CFLAGS) $(LFLAGS) -c -s $<

# Gives rules for making both executables.
$(PROG): $(SOURCE_FILES) | $(BIN)
	$(CXX) $(SOURCE_FILES) -o $(PROG) $(LFLAGS)
$(ALLTEST): $(ALLTEST_FILES) | $(BIN)
	$(CXX) $(ALLTEST_FILES) -o $(ALLTEST) $(LFLAGS) $(TEST_FLAGS) -lcheck

# makes one unified bin.
$(BIN):
	mkdir $@
	cp -R $(ASSETS_CONTENTS) $@

# cleans everything that can be automatically recreated with "make -f makefile_lab".
# To do this, run the following command in verdant-octo-spork/Prototype: make -f makefile_lab clean
clean:
	$(DELETE) *.o
	$(DELETE_RECURSIVE) $(BIN)
