# Please run the clean command detailed at the bottom before running: make -f makefile_alex

CFLAGS = -pedantic -Wall -Wextra -Wno-unused-variable -Wno-unused-parameter
TTF_FLAGS = -I./libraries_Alex/SDL_ttf/include -L./libraries_Alex/SDL_ttf/lib
IMAGE_FLAGS = -I./libraries_Alex/SDL_Image/include -L./libraries_Alex/SDL_Image/lib
MIXER_FLAGS = -I./SDL_Mixer_alex/include -L./SDL_Mixer_alex/lib
# TEST_FLAGS = To Alex: if you'd like to be able to run Test, please install or build Check for your system to figure out how to link it.
LFLAGS = -g $(TTF_FLAGS) $(IMAGE_FLAGS) $(MIXER_FLAGS) -lSDL2 -lSDL2_Image -lSDL_ttf -lSDL_Mixer -lfreetype -lm
DELETE = rm
DELETE_RECURSIVE = rm -r

# List all the files here
ASSETS_CONTENTS = assets/.
COMMON_FILES = init.o game.o world_generation.o game_objects.o AI.o UI.o generic.o controls.o graphics.o audio.o announcements.o UI_templates.o
SOURCE_FILES = main.o $(COMMON_FILES)
# ALLTEST_FILES = all.test.o $(COMMON_FILES)
# ALLTEST = $(BIN)/Test
BIN = bin
PROG = $(BIN)/Prototype
CXX = gcc

# top-level rule to create the program.
all: $(PROG)
# Need to add $(ALLTEST) alongside this later.

# compiling other source files.
%.o: src/%.c src/%.h
	$(CXX) $(CFLAGS) $(LFLAGS) -c -s $<
# all.test.o: src/all.test.c src/all.test.h
# 	$(CXX) $(CFLAGS) $(LFLAGS) -c -s $<

# linking the program. | $(BIN) makes the bin/ directory if it does not yet exist.
$(PROG): $(SOURCE_FILES) | $(BIN)
	$(CXX) $(SOURCE_FILES) -o $(PROG) $(LFLAGS)
# $(ALLTEST): $(ALLTEST_FILES) | $(BIN)
# 	$(CXX) $(ALLTEST_FILES) -o $(ALLTEST) $(LFLAGS) $(TEST_FLAGS) -lcheck

# makes the bin/ directory and copies assets to bin/ so we don't have to drag them in manually.
# $@ is merely a variable provided by makefile which effectively substitutes in the rule "$(BIN)".
$(BIN):
	mkdir $@
	cp -R $(ASSETS_CONTENTS) $@

# cleans everything that can be automatically recreated with "make".
# To do this, run the following command in verdant-octo-spork/Prototype: make -f makefile_lab clean
clean:
	rm $(PROG) *.o
#	rm $(ALLTEST) *.o
	rm -r $(BIN)

